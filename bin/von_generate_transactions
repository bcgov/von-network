#!/bin/bash

set -e

rm -rf /var/lib/indy/*

usage () {
  cat <<-EOF

    Used to generate a genesis transaction file.

    Usage:
        $0 [options]

    Options:
    -i <ip address>
        Specify the ip address to use in the genesis transaction file.
    -s <ip addresses>
        Specify a comma delimited list of addresses to use in the genesis transaction file.
    -p <ip ports>
        Specify a comma delimited list of ports (2 for each ip) to use in the genesis transaction file.
    -n <node number>
        Specify the number to use for the given node.
    -h
        Display usage documentation.

    Examples:
        $0 -i x.x.x.x -n y
        $0 -s "a.a.a.a,b.b.b.b,c.c.c.c,d.d.d.d" -n x
        $0 -s "a.a.a.a,b.b.b.b,c.c.c.c,d.d.d.d" -p "a1,a2,b1,b2,c1,c2,d1,d2" -n x

        Use with Docker Compose:
        export DOCKERHOST=x.x.x.x
        $0 -n y
EOF
exit 1
}

options=':i:s:p:n:h'
while getopts $options option
do
    case $option in
        i  ) ipAddress=$OPTARG;;
        s  ) ipAddresses=$OPTARG;;
        p  ) ipPorts=$OPTARG;;
        n  ) nodeNum=$OPTARG;;
        h  ) usage; exit;;
        \? ) echo -e "Unknown option: -$OPTARG" >&2; exit 1;;
        :  ) echo -e "Missing option argument for -$OPTARG" >&2; exit 1;;
        *  ) echo -e "Unimplemented option: -$OPTARG" >&2; exit 1;;
    esac
done

genesisFileName=${genesisFileName:-pool_transactions_genesis}
genesisFileBackupName=${genesisFileBackupName:-${genesisFileName}.old}
genesisFileTemplateDir=${genesisFileTemplateDir:-/home/indy/.indy-cli/networks/sandbox}
genesisFileTemplatePath=${genesisFileTemplatePath:-${genesisFileTemplateDir}/${genesisFileName}}
genesisFileTemplateBackupPath=${genesisFileTemplateBackupPath:-${genesisFileTemplateDir}/${genesisFileBackupName}}

ledgerDir=${ledgerDir:-/home/indy/ledger}
genesisFileDir=${genesisFileDir:-${ledgerDir}/sandbox}
genesisFilePath=${genesisFilePath:-${genesisFileDir}/${genesisFileName}}

nodeArg=""
if [ ! -z "$nodeNum" ]; then
    # Only run this for nodes:
    nodeArg="--nodeNum $nodeNum"

    #echo -e \\n\\n"================================================================================================"
    #echo -e "Initializing Node $nodeNum:"
    #echo -e init_indy_keys --name "Node$nodeNum"
    #echo -e "------------------------------------------------------------------------------------------------"
    #init_indy_keys --name "Node$nodeNum"
    #echo -e "================================================================================================"
fi

if [ ! -z "$ipAddresses" ]; then
    ipsArg="$ipAddresses"
elif [ ! -z "$ipAddress" ]; then
    ipsArg="$ipAddress","$ipAddress","$ipAddress","$ipAddress"
elif [ ! -z "$DOCKERHOST" ]; then
    ipsArg="$DOCKERHOST","$DOCKERHOST","$DOCKERHOST","$DOCKERHOST"
else
    echo "Error: no IP, IPS, or DOCKERHOST argument provided."
    exit 1
fi


echo -e \\n\\n"================================================================================================"
echo -e "Generating genesis transaction file:"
echo -e "nodeArg: ${nodeArg}"
echo -e "ipAddresses: ${ipsArg}"
if [ ! -z "$ipPorts" ]; then
    echo -e "ipPorts: ${ipPorts}"
fi
echo -e "genesisFilePath: ${genesisFilePath}"
echo -e "------------------------------------------------------------------------------------------------"
# Use supplied IP address
echo -e generate_indy_pool_transactions \
    --nodes 4 \
    --clients 0 \
    $nodeArg \
    --ips "$ipsArg" \
    \\n

generate_indy_pool_transactions \
    --nodes 4 \
    --clients 0 \
    $nodeArg \
    --ips "$ipsArg"

echo -e \\n"------------------------------------------------------------------------------------------------"
echo -e "Generated genesis transaction file; ${genesisFilePath}"\\n
cat ${genesisFilePath}

if [ ! -z "$ipPorts" ]; then
    # Define the default and new port lists
    ipPortsDefaults="9701,9702,9703,9704,9705,9706,9707,9708"

    # Convert the comma-separated strings into arrays
    IFS=',' read -r -a defaultPortsArray <<< "$ipPortsDefaults"
    IFS=',' read -r -a newPortsArray <<< "$ipPorts"
    
    # Build the sed commands
    sedComand=""

    # Loop over both arrays and replace default ports with new ports
    for (( i=0; i<${#newPortsArray[@]}; i+=2 )); do
        # Replace the pair of default ports with new ports
        defaultNodePort="${defaultPortsArray[i]}"
        defaultClientPort="${defaultPortsArray[i+1]}"
        
        newNodePort="${newPortsArray[i]}"
        newClientPort="${newPortsArray[i+1]}"

        echo -e "cat ${genesisFilePath} | sed \"s~:$defaultNodePort,~:$newNodePort,~g\" | sed \"s~:$defaultClientPort,~:$newClientPort,~g\" > ${genesisFilePath}.tmp"
        cat ${genesisFilePath} | sed "s~:$defaultNodePort,~:$newNodePort,~g" | sed "s~:$defaultClientPort,~:$newClientPort,~g" > ${genesisFilePath}.tmp
        cat ${genesisFilePath}.tmp > ${genesisFilePath}
        rm ${genesisFilePath}.tmp
    done

    echo -e \\n"------------------------------------------------------------------------------------------------"
    echo -e "Updated genesis transaction file; ${genesisFilePath}"\\n
    cat ${genesisFilePath}
fi

if [ ! -z "$remapPorts" ]; then
    echo -e \\n"------------------------------------------------------------------------------------------------"
    echo -e "Changing ports:"
    echo -e "- client_port => 80"
    echo -e "- node_port => 9418"\\n
    echo -e mv ${genesisFileTemplatePath} ${genesisFileTemplateBackupPath}
    mv ${genesisFileTemplatePath} ${genesisFileTemplateBackupPath}
    echo -e "cat ${genesisFileTemplateBackupPath} | sed 's~\(\"client_port\":\).\{4\}\(,\)~\180\2~g' | sed 's~\(\"node_port\":\).\{4\}\(,\)~\19418\2~g' > ${genesisFileTemplatePath}"
    cat ${genesisFileTemplateBackupPath} | sed 's~\(\"client_port\":\).\{4\}\(,\)~\180\2~g' | sed 's~\(\"node_port\":\).\{4\}\(,\)~\19418\2~g' > ${genesisFileTemplatePath}
fi

#echo -e \\n"------------------------------------------------------------------------------------------------"
#echo -e "Initial state of ${genesisFilePath}"\\n
#cat ${genesisFilePath}

#echo -e \\n"------------------------------------------------------------------------------------------------"
#echo -e "Overwriting ..."
#echo -e "cat ${genesisFileTemplatePath} > ${genesisFilePath}"
#cat ${genesisFileTemplatePath} > ${genesisFilePath}

#echo -e \\n"------------------------------------------------------------------------------------------------"
#echo -e "Final genesis transaction file; ${genesisFilePath}"\\n
#cat ${genesisFilePath}

echo -e "================================================================================================"\\n
